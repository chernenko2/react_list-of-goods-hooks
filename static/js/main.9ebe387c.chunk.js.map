{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","isReversed","changeIsReversed","NONE","sortType","changeSortType","handleSort","sort","reorderedGoods","visibleGoods","ALPHABET","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","canReset","className","type","classNames","onClick","prevReverse","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0ECfQC,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDDjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAuCE,IAAMM,EAAgB,WAC3B,MAAuCC,oBAAS,GAAhD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAmCF,mBAASP,EAASU,MAArD,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EAAa,SAACC,GAClBF,EAAeE,IAGXC,EA7CD,SACLb,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENQ,EAAY,YAAOd,GAEzB,OAAQS,GACN,KAAKX,EAASiB,SACZD,EAAaF,MACX,SAACI,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAExC,MAEF,KAAKnB,EAASqB,OACZL,EAAaF,MACX,SAACI,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAQ7C,OAAOd,EACHQ,EAAaO,UACbP,EAoBmBQ,CACrBnB,EACA,CAAEG,aAAYG,aAGVc,EAAYd,IAAaX,EAASU,MAASF,EAEjD,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaX,EAASiB,WAEtCY,QAAS,kBAAMhB,EAAWb,EAASiB,WANrC,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaX,EAASqB,SAEtCQ,QAAS,kBAAMhB,EAAWb,EAASqB,SANrC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QAnDc,WACpBpB,GAAiB,SAACqB,GAAD,OAAmBA,MA4ChC,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAxDU,WAClBjB,EAAeZ,EAASU,MACxBD,GAAiB,IAmDX,sBAUJ,cAAC,EAAD,CAAWP,MAAOa,QEhIxBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9ebe387c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort(\n        (good1, good2) => good1.localeCompare(good2),\n      );\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort(\n        (good1, good2) => good1.length - good2.length,\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, changeIsReversed] = useState(false);\n  const [sortType, changeSortType] = useState(SortType.NONE);\n\n  const handleReverse = () => {\n    changeIsReversed((prevReverse) => (!prevReverse));\n  };\n\n  const handleReset = () => {\n    changeSortType(SortType.NONE);\n    changeIsReversed(false);\n  };\n\n  const handleSort = (sort: SortType) => {\n    changeSortType(sort);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  const canReset = (sortType !== SortType.NONE) || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => handleSort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => handleSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {canReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={reorderedGoods} />\n    </div>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}